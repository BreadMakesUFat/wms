<!DOCTYPE html>
<html lang="de">
<meta charset="UTF-8">
<title>Barcode Scanner</title>
<link rel="icon" type="image/x-icon" href="{{ url_for('static', filename='img/icons8-frog-96.png.png') }}">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous">
<link rel="stylesheet" href="{{ url_for('static', filename='css/index_barcode.css') }}">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3" crossorigin="anonymous"></script>
<script src="https://unpkg.com/html5-qrcode" type="text/javascript"></script>
<script src="{{ url_for('static', filename='js/scanner.js') }}" type="text/javascript"></script>
<script src="{{ url_for('static', filename='js/utils.js') }}" type="text/javascript"></script>

<body>
    <div id="outerWrapper">
    <div id="formWrapper">
        
        <!-- Destination Scene -->
        <div id="destinationScene" class="Scene">
            <div class="mb-3 text-center">
                <label class="form-label mb-3 pageLabel">Type in the destination:</label>
                <textarea class="form-control mb-3 textInput" id="destinationTextInput" rows="1" autofocus></textarea>
                <button type="submit" id="buttonSubmitDestination" class="btn btn-dark btn-lg submitButton" onclick="submitDestination()">Ok</button>
            </div> 
        </div>

        <!-- Confirmation Scene -->
        <div id="confirmationScene" class="Scene">
            <div class="mb-3 text-center">
                <ul>
                    <li><p class="imageLabel">Barcode Scanner</p><img src="{{ url_for('static', filename='img/icons8-barcode-reader-100.png') }}" class="imgIcon" width="300" height="300" onclick="clickBarcodeScanner()"></li>
                    <li><p class="imageLabel">Camera</p><img src="{{ url_for('static', filename='img/icons8-cameras-64.png') }}" class="imgIcon" width="300" height="300" onclick="clickCameraScanner()" autofocus></li>
                    <li><p class="imageLabel">Submit</p><img src="{{ url_for('static', filename='img/icons8-save-as-80.png') }}" class="imgIcon" width="300" height="300" onclick="clickSubmit()"></li>
                </ul>
            </div>
        </div>

        <!-- Camera Scanner Scene -->
        <div id="cameraScene" class="Scene" autofocus></div>

        <!-- Barcode Scanner Scene -->
        <div id="barcodeScannerScene" class="Scene">
            <div class="mb-3 text-center">
                <label id="idLabel" class="form-label mb-3 pageLabel">Scan the BON/Article ID</label>
                <textarea class="form-control mb-3 textInput" id="barcodeScannerInput" rows="1" onkeypress="submitBarcodeBONCheck(event)" autofocus></textarea>
                <button type="submit" id="buttonSubmitBON" class="btn btn-dark btn-lg submitButton" onclick="submitBarcodeBON()">Ok</button>
            </div>
        </div>

        <!-- Recipient Scene -->
        <div id="recipientScene" class="Scene">
            <div class="mb-3 text-center">
                <label class="form-label mb-3 pageLabel">No. of recipients:</label>
                <textarea class="form-control mb-3 textInput" id="recipientTextInput" rows="1" autofocus></textarea>
                <button type="submit" id="buttonSkipRecipient" class="btn btn-dark btn-lg submitButton" onclick="submitRecipient(null)">Skip</button>
                <button type="submit" id="buttonSubmitRecipient" class="btn btn-dark btn-lg submitButton" onclick="submitRecipient(document.getElementById('recipientTextInput').value)">Ok</button>
            </div>
        </div>

        <!-- Amount Scene -->
        <div id="amountScene" class="Scene">
            <div class="mb-3 form-check text-center">
                <label class="form-label mb-3 pageLabel">Amount delivered:</label>
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <label class="input-group-text pageLabel">Unit</label>
                    </div>
                    <select class="custom-select pageSelect" id="selectAmountInput">
                        <option selected>Pieces</option>
                        <option>Boxes</option>
                        <option>kg</option>
                    </select>
                </div>
                <textarea class="form-control mb-3 textInput" id="amountTextInput" rows="1" autofocus></textarea>
                <button type="submit" id="buttonSubmitAmountFull" class="btn btn-dark btn-lg submitButton" onclick="submitAmount(true)">Full</button>
                <button type="submit" id="buttonSubmitAmount" class="btn btn-dark btn-lg submitButton" onclick="submitAmount()">Ok</button>
            </div>
        </div>

        <!-- Server Feedback Scene -->
        <div id="serverFeedbackScene" class="Scene">
            <div class="mb-3 text-center">
                <p class="sceneText" id="serverFeedbackSceneText">Waiting for a response from the server...</p>
                <button id="buttonOkServerFeedback" class="btn btn-dark btn-lg submitButton" onclick="okServerFeedback()" disabled="true">Ok</button>
                <button id="buttonRetryServerFeedback" class="btn btn-dark btn-lg submitButton" onclick="retryServerFeedback()" disabled="true">Retry</button>
            </div>
        </div>
        

    </div>
    </div>      

    <script>

        // init the camera scanner object
        initScanner("cameraScene");

        // init the ScanContent object 
        let scanContent = null;

        // get width, height from jinja context
        const width = {{ size[0] }};
        const height = {{ size[1] }};

        // create Scenes
        const destinationScene = new Scene("destinationScene", "destinationTextInput");
        const cameraScene = new Scene("cameraScene", "cameraScene");
        const barcodeScannerScene = new Scene("barcodeScannerScene", "barcodeScannerInput");
        const confirmationScene = new Scene("confirmationScene", "confirmationScene");
        const recipientScene = new Scene("recipientScene", "recipientTextInput");
        const amountScene = new Scene("amountScene", "amountTextInput");
        const serverFeedbackScene = new Scene("serverFeedbackScene", "serverFeedbackSceneText");

        // enable first Scene
        destinationScene.enable();


        // callback functions for scene elements

        // Destination Scene
        function submitDestination() {

            let input = document.getElementById("destinationTextInput").value.trim();

            if (!input) {
                // TODO: add shake animation
            }
            else {

                // Create new ScanContent object for current destination
                scanContent = new ScanContent(input);

                // change scene to confirmation scene
                clearText("destinationTextInput");
                destinationScene.disable();
                recipientScene.enable();
            }
        }

        // Recipient Scene
        function submitRecipient(txt) {
            let content = txt == null ? "" : txt.trim();
            scanContent.setRecipients(content);
            clearText("recipientTextInput");
            recipientScene.disable();
            confirmationScene.enable();
        }

        function clickBarcodeScanner() {
            //focus("barcodeScannerInput");
            confirmationScene.disable();
            barcodeScannerScene.enable();
        }

        function clickCameraScanner() {
            confirmationScene.disable();
            cameraScene.enable();
            startScanning(width, height, scannerCallback);
        }

        function scannerCallback(decodedText, decodedResult) {
            scanContent.addBon(decodedText);
            stopScanning()
            barcodeScannerScene.disable();
            amountScene.enable();
        }

        function clickSubmit() {

            // check if at least one bon has been added 
            if(scanContent.bons.length <= 0) {
                alert("No bons have been added yet!");
                return;
            }
            scanContent.sendPost(updateFeedbackScene);
            confirmationScene.disable();
            serverFeedbackScene.enable();
        }

        function submitAmount(full = false) {
            let input = document.getElementById("amountTextInput").value.trim();
            let unit = document.getElementById("selectAmountInput").value.trim();

            if (full || input) {
                let amount = full ? "full" : input;
                scanContent.addAmount(amount);
                scanContent.addUnit(unit);
                clearText("amountTextInput");
                amountScene.disable();
                confirmationScene.enable();
            }
            else {
                // add error animation
            }

        }

        // Barcode Scene 

        function submitBarcodeBON() {
            let input = document.getElementById("barcodeScannerInput").value.trim();

            if (!input) {
                // shake text area
            }
            else {
                scanContent.addBon(input);

                // change scene to confirmation page
                clearText("barcodeScannerInput");
                barcodeScannerScene.disable();
                amountScene.enable();
            }
        }

        function submitBarcodeBONCheck(event) {
            // submit if enter key was pressed
            if (event.keyCode == 13) {
                submitBarcodeBON();
            }
        }

        // Server Feedback Scene 

        function okServerFeedback() {
            resetFeedbackScene();
            serverFeedbackScene.disable();
            destinationScene.enable();
        }

        function retryServerFeedback() {
            resetFeedbackScene();
            scanContent.sendPost(updateFeedbackScene);
        }

        function updateFeedbackScene() {
            let textSuccess = "The booking was successfull";
            let textFailed = "The booking was NOT successfull. Possible problems:\n - The server is offline\n - No WiFi connection";
            let feedbackText = scanContent.postSuccess ? textSuccess : textFailed;
            document.getElementById("serverFeedbackSceneText").innerHTML = feedbackText;
            document.getElementById("buttonRetryServerFeedback").disabled = scanContent.postSuccess;
            document.getElementById("buttonOkServerFeedback").disabled = false;
        }

        function resetFeedbackScene() {
            document.getElementById("serverFeedbackSceneText").innerHTML = "Waiting for a response from the server...";
            document.getElementById("buttonRetryServerFeedback").disabled = true
            document.getElementById("buttonOkServerFeedback").disabled = true;
        }
    
    </script>
</body>
</html> 